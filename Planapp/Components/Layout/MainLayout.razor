@inherits LayoutComponentBase
@using Microsoft.Extensions.Logging
@inject ILogger<MainLayout> Logger
@inject IJSRuntime JSRuntime
@implements IDisposable

<div class="app-container">
    <!-- Modern Sidebar with Backdrop -->
    <div class="sidebar @NavMenuCssClass" @onclick:stopPropagation="true">
        <NavMenu @ref="navMenuRef"
                 OnMenuItemClick="@CloseNavMenu"
                 CollapseMenu="@collapseNavMenu"
                 OnToggleMenu="@ToggleNavMenu" />
    </div>

    <!-- Main Content Area -->
    <main class="main-content">
        <!-- Modern Top Navigation Bar -->
        <div class="top-bar">
            <!-- Mobile Menu Toggle -->
            <button class="mobile-menu-toggle @(collapseNavMenu ? "" : "active")"
                    @onclick="ToggleNavMenu"
                    type="button"
                    aria-expanded="@(!collapseNavMenu)"
                    aria-label="Toggle navigation">
                <div class="hamburger-icon">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </button>

            <!-- App Title with Modern Typography -->
            <div class="app-title">
                <div class="title-icon">📱</div>
                <h1 class="title-text">Usage Meter</h1>
                <div class="title-badge">
                    <span class="badge-text">Analytics</span>
                </div>
            </div>

            <!-- Top Bar Actions -->
            <div class="top-bar-actions">
                <div class="status-indicator online" title="Connected">
                    <div class="status-dot"></div>
                </div>
            </div>
        </div>

        <!-- Page Content with Modern Container -->
        <article class="page-content">
            <div class="content-wrapper">
                @Body
            </div>
        </article>
    </main>

    <!-- Mobile Backdrop Overlay -->
    <div class="mobile-backdrop @(collapseNavMenu ? "" : "show")"
         @onclick="CloseNavMenu"
         @onclick:stopPropagation="false"></div>
</div>

<!-- Loading Indicator -->
<div id="blazor-loading" class="loading-overlay">
    <div class="loading-container">
        <div class="loading-spinner"></div>
        <div class="loading-text">Loading...</div>
    </div>
</div>

<style>
    /* Modern App Container */
    .app-container {
        min-height: 100vh;
        display: flex;
        background: var(--gray-50);
        position: relative;
        overflow-x: hidden;
    }

    /* Sidebar Styling */
    .sidebar {
        width: 280px;
        height: 100vh;
        background: linear-gradient(180deg, #667eea 0%, #764ba2 100%);
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
        transform: translateX(-100%);
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        overflow-y: auto;
        overflow-x: hidden;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        backdrop-filter: blur(16px);
        border-right: 1px solid rgba(255, 255, 255, 0.1);
    }

        .sidebar:not(.collapse) {
            transform: translateX(0);
        }

        .sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .sidebar::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 3px;
        }

        .sidebar::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.3);
            border-radius: 3px;
        }

            .sidebar::-webkit-scrollbar-thumb:hover {
                background: rgba(255, 255, 255, 0.5);
            }

    /* Main Content */
    .main-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        transition: margin-left 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        margin-left: 0;
    }

    /* Modern Top Bar */
    .top-bar {
        height: 4rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 1.5rem;
        position: sticky;
        top: 0;
        z-index: 100;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(16px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    /* Mobile Menu Toggle */
    .mobile-menu-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 3rem;
        height: 3rem;
        border: none;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 0.75rem;
        cursor: pointer;
        transition: all 0.2s ease;
        backdrop-filter: blur(8px);
    }

        .mobile-menu-toggle:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.05);
        }

        .mobile-menu-toggle:focus {
            outline: 2px solid rgba(255, 255, 255, 0.5);
            outline-offset: 2px;
        }

    /* Hamburger Icon Animation */
    .hamburger-icon {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        width: 1.25rem;
    }

        .hamburger-icon span {
            height: 2px;
            background: white;
            border-radius: 1px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

    .mobile-menu-toggle.active .hamburger-icon span:nth-child(1) {
        transform: rotate(45deg) translate(0.3rem, 0.3rem);
    }

    .mobile-menu-toggle.active .hamburger-icon span:nth-child(2) {
        opacity: 0;
        transform: translateX(-0.5rem);
    }

    .mobile-menu-toggle.active .hamburger-icon span:nth-child(3) {
        transform: rotate(-45deg) translate(0.3rem, -0.3rem);
    }

    /* App Title */
    .app-title {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex: 1;
        justify-content: center;
    }

    .title-icon {
        font-size: 2rem;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }

    .title-text {
        font-size: 1.75rem;
        font-weight: 700;
        margin: 0;
        background: linear-gradient(135deg, #ffffff, #e0e7ff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .title-badge {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        backdrop-filter: blur(8px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    /* Top Bar Actions */
    .top-bar-actions {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .status-indicator {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 1rem;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(8px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.2s ease;
    }

        .status-indicator:hover {
            background: rgba(255, 255, 255, 0.2);
        }

    .status-dot {
        width: 0.5rem;
        height: 0.5rem;
        border-radius: 50%;
        background: #10b981;
        animation: pulse-dot 2s ease-in-out infinite;
    }

    @@keyframes pulse-dot {
        0%, 100% {
            opacity: 1;
        }

        50% {
            opacity: 0.5;
        }
    }

    /* Page Content */
    .page-content {
        flex: 1;
        background: var(--gray-50);
        min-height: calc(100vh - 4rem);
        position: relative;
    }

    .content-wrapper {
        padding: 0;
        min-height: 100%;
    }

    /* Mobile Backdrop */
    .mobile-backdrop {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
        backdrop-filter: blur(4px);
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

        .mobile-backdrop.show {
            opacity: 1;
            visibility: visible;
        }

    /* Loading Overlay */
    .loading-overlay {
        position: fixed;
        inset: 0;
        background: rgba(255, 255, 255, 0.9);
        z-index: 9999;
        display: flex;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(8px);
        opacity: 1;
        visibility: visible;
        transition: all 0.5s ease;
    }

        .loading-overlay.hidden {
            opacity: 0;
            visibility: hidden;
            pointer-events: none;
        }

    .loading-container {
        text-align: center;
        background: white;
        padding: 3rem;
        border-radius: 1.5rem;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        backdrop-filter: blur(16px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .loading-spinner {
        width: 3rem;
        height: 3rem;
        border: 4px solid #e5e7eb;
        border-top: 4px solid #3b82f6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto 1rem;
    }

    .loading-text {
        color: #6b7280;
        font-weight: 500;
        font-size: 1.125rem;
    }

    @@keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    /* Desktop Layout */
    @@media (min-width: 768px) {
        .sidebar {
            position: static;
            transform: translateX(0);
            box-shadow: none;
            border-right: 1px solid rgba(255, 255, 255, 0.1);
        }

        .main-content {
            margin-left: 0;
        }

        .mobile-menu-toggle {
            display: none;
        }

        .mobile-backdrop {
            display: none !important;
        }

        .app-title {
            justify-content: flex-start;
            margin-left: 2rem;
        }

        .title-text {
            font-size: 2rem;
        }
    }

    /* Tablet Layout */
    @@media (max-width: 1024px) and (min-width: 768px) {
        .sidebar {
            width: 240px;
        }

        .title-text {
            font-size: 1.5rem;
        }
    }

    /* Mobile Layout */
    @@media (max-width: 767px) {
        .top-bar {
            padding: 0 1rem;
            height: 3.5rem;
        }

        .title-text {
            font-size: 1.25rem;
        }

        .title-badge {
            display: none;
        }

        .page-content {
            min-height: calc(100vh - 3.5rem);
        }

        .status-indicator {
            padding: 0.375rem 0.75rem;
        }
    }

    /* Small Mobile */
    @@media (max-width: 480px) {
        .top-bar {
            padding: 0 0.75rem;
        }

        .app-title {
            gap: 0.75rem;
        }

        .title-icon {
            font-size: 1.5rem;
        }

        .title-text {
            font-size: 1.125rem;
        }

        .mobile-menu-toggle {
            width: 2.5rem;
            height: 2.5rem;
        }

        .hamburger-icon {
            width: 1rem;
            gap: 0.2rem;
        }
    }

    /* Reduced Motion */
    @@media (prefers-reduced-motion: reduce) {
        *, *::before, *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }

    /* High Contrast Mode */
    @@media (prefers-contrast: high) {
        .top-bar {
            border-bottom: 2px solid #000;
        }

        .mobile-menu-toggle {
            border: 2px solid rgba(255, 255, 255, 0.8);
        }

        .sidebar {
            border-right: 2px solid rgba(255, 255, 255, 0.8);
        }
    }

    /* Focus Management */
    .skip-link {
        position: absolute;
        top: -40px;
        left: 6px;
        background: #000;
        color: #fff;
        padding: 8px;
        text-decoration: none;
        z-index: 10000;
        border-radius: 4px;
    }

        .skip-link:focus {
            top: 6px;
        }

    /* Print Styles */
    @@media print {
        .sidebar, .top-bar, .mobile-backdrop, .loading-overlay {
            display: none !important;
        }

        .main-content {
            margin: 0 !important;
        }

        .page-content {
            background: white !important;
        }
    }
</style>

@code {
    private bool collapseNavMenu = true;
    private NavMenu? navMenuRef;
    private IJSObjectReference? jsModule;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // Hide loading overlay after component is rendered
                await Task.Delay(1000);
                await JSRuntime.InvokeVoidAsync("eval", @"
                    const loadingEl = document.getElementById('blazor-loading');
                    if (loadingEl) {
                        loadingEl.classList.add('hidden');
                        setTimeout(() => loadingEl.remove(), 500);
                    }
                ");

                // Load JavaScript module for enhanced interactions
                jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>(
                    "import", "./js/mainlayout.js");

                // Initialize responsive behavior and keyboard shortcuts
                await jsModule.InvokeVoidAsync("initializeMainLayout",
                    DotNetObjectReference.Create(this));

                Logger.LogDebug("MainLayout JavaScript module loaded successfully");
            }
            catch (Exception ex)
            {
                Logger.LogWarning(ex, "Could not load MainLayout JavaScript module");
            }
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        Logger.LogDebug($"Navigation menu toggled: {!collapseNavMenu}");
        StateHasChanged();
    }

    private void CloseNavMenu()
    {
        if (!collapseNavMenu)
        {
            collapseNavMenu = true;
            Logger.LogDebug("Navigation menu closed");
            StateHasChanged();
        }
    }

    [JSInvokable]
    public void OnWindowResize(bool isMobile)
    {
        // Auto-close menu on desktop, maintain state on mobile
        if (!isMobile && !collapseNavMenu)
        {
            // Let user control desktop menu state
        }
        StateHasChanged();
    }

    [JSInvokable]
    public void OnKeyboardShortcut(string shortcut)
    {
        switch (shortcut)
        {
            case "toggle-menu":
                ToggleNavMenu();
                break;
            case "escape":
                CloseNavMenu();
                break;
        }
    }

    public void Dispose()
    {
        try
        {
            jsModule?.DisposeAsync();
        }
        catch (Exception ex)
        {
            Logger.LogWarning(ex, "Error disposing MainLayout resources");
        }
    }
}