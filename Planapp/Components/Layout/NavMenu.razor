@using Microsoft.AspNetCore.Components.Routing
@inject NavigationManager Navigation
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">📱 Usage Meter</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="nav-scrollable @NavMenuCssClass" @onclick="@CollapseNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="@CloseMenu">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="rules" @onclick="@CloseMenu">
                <span class="bi bi-rules-nav-menu" aria-hidden="true"></span> Rules
            </NavLink>
        </div>

        @if (DeviceInfo.Platform == DevicePlatform.Android)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="android-usage" @onclick="@CloseMenu">
                    <span class="bi bi-phone-nav-menu" aria-hidden="true"></span> App Usage
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="settings" @onclick="@CloseMenu">
                <span class="bi bi-settings-nav-menu" aria-hidden="true"></span> Settings
            </NavLink>
        </div>

        @{
            var isDebugBuild = false;
#if DEBUG
        isDebugBuild = true;
#endif
        }

        @if (isDebugBuild)
        {
            <div class="nav-section-title">Debug Tools</div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="rule-test" @onclick="@CloseMenu">
                    <span class="bi bi-test-nav-menu" aria-hidden="true"></span> Test Rules
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="launch-test" @onclick="@CloseMenu">
                    <span class="bi bi-launch-test-nav-menu" aria-hidden="true"></span> Launch Test
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="app-launcher-test" @onclick="@CloseMenu">
                    <span class="bi bi-launch-test-nav-menu" aria-hidden="true"></span> App Launcher Test
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [Parameter] public EventCallback OnMenuItemClick { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        StateHasChanged();
    }

    private async Task CloseMenu()
    {
        collapseNavMenu = true;
        await OnMenuItemClick.InvokeAsync();
        StateHasChanged();
    }

    private void CollapseNavMenu()
    {
        // This method can be called from JavaScript if needed
        // For now, we'll handle mobile behavior through CSS and the parent component
        collapseNavMenu = true;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        // Always close menu on navigation
        collapseNavMenu = true;
        StateHasChanged();
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}